import React, { useEffect } from "react";
import Head from "next/head";
import { Container } from "react-bootstrap";
import MenuBar from "@/components/MenuBar";
import localFont from "next/font/local";
import ShoppingCartIcon from "@mui/icons-material/ShoppingCart";
import ProductPanel from "@/components/ProductPanel";
import OrderConfirmPanel from "@/components/OrderConfirmPanel";
import { useSelector } from "react-redux";
import { cartSelector } from "@/redux/slices/cartSlices";
import { authSelector } from "@/redux/slices/authSlices";
import { usePathname, useRouter } from "next/navigation";
import OrderSuccessPage from "@/components/OrderSuccessPage";
import { confirmOrderSelector } from "@/redux/slices/confirmOrderSlices";
import Loading from "@/components/Loading";
import { loadingSelector } from "@/redux/slices/loadingSlices";

const myFont = localFont({
  src: "../fonts/Prompt/Prompt-Regular.ttf",
  display: "swap",
});
const CartPage = () => {
  const authReducer = useSelector(authSelector);
  const cartReducer = useSelector(cartSelector);
  const confirmOrderReducer = useSelector(confirmOrderSelector);
  const loadingReducer = useSelector(loadingSelector);
  const pathname = usePathname();
  const router = useRouter();
  useEffect(() => {
    if (!authReducer.isAuth) {
      if (pathname === "/CartPage") {
        router.push("/");
      }
    }
  }, []);
  if (!authReducer.isAuth) return null;
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${myFont.className}`}>
        <MenuBar />
        {!confirmOrderReducer ? (
          <div className="zone-yourCart">
            <Container fluid className="mb-5">
              <div className="header-page">
                <ShoppingCartIcon />
                <b>รถเข็นของคุณ</b>
              </div>
            </Container>
            <Container>
              {cartReducer?.length !== 0 ? (
                <>
                  <ProductPanel />
                  <OrderConfirmPanel />
                </>
              ) : (
                <p className="text-center">ไม่มีสินค้าในตะกร้า</p>
              )}
            </Container>
          </div>
        ) : (
          <OrderSuccessPage />
        )}
        {loadingReducer && <Loading />}
      </main>
    </>
  );
};

export default CartPage;
